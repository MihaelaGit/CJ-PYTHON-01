
# Final Project

Let's build an application that  will store our personal books in a books
collection.

We will with a mutable mapping that describes out Book:
class Book( ...):
 ...

 Once a book is created , it cannot be updated !
 There is  also another classes DuplicatedBook and ExpendiveBook, derrived from Book class (inheritance),
 which also contains the copy numberand prices.class DuplicatedBook(Book):
 ...
class ExpensiveBook(Book):
..
For these 2 previoys  classes, we will use  overloaded operators :"+" in order to  add the costs for 2 books
( it will return price* no_copies for the first book + price* no_copies for the second ) and "equal" in order to
compare the prices ( it will return only True or False ).

 We will also  have the BooksCollection  that is a  sequence  that holds our
 personal books .

 class BooksCollection(..):
 ...
We can add books one by one, delete them, and also  using a pick  method  we can be able to
 select a random book or a nominated  one,  from the books collection.


 We will also have  a Library  class, which is   mutable mapping that  hold
   different books .

   class Library():
   ..

   In this class we should be able to check if a book name is available or not into the library.
   Also using a context manager and an overloading operator , we should be able to  design
   some Library  methods ( to be updated).

  We will also  use a mixin class  that will help us to  print   nice the  Book and Library  informations.

 Independently,  we will have to check if  books from our collection are   or are not in the  Library
    and to return a list with  list  from both collections!

This  function  will have a decorator  that will dispay  in a nice maneer   the common books  from library and   books collection!
Also, using  a context manager, deal with the IndexError, KeyError and DivisionbyZeroError and some logs  !


