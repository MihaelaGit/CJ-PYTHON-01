Create a database that will mantain an client list.

client_list=[client_1, client_2 ....]

The client list will have at least 2 types of clients, a "basic_client" class and a "gold_client" class that will
inherit the "basic_client" class and will have a new discount atribute.

ex.
client_1 = Client("Joe", "Smith", "USA", "(001)4444-4444", "HoneyWell")
client_2 = Gold_Client("Jake", "fisher", "USA", "(001)4444-4444", "J.Walker", "20")

Each of the classes created must implement a custom "str" and "repr" methods

A minimum of 1 of the following: decorator, context_manager, generator (ex. for the client ID) must be implemented in one of the classes.


A mixin class that will be used by database add custom print of it's content.

class PrittyPrinter:
    ...


A function called "check_client" that will check if the client exist in our database.
The function will have a decorator that will print a nice representation.

def check_client():
    ...

Each of the function, clases and methods mentioned above should have their functionality shown in the 

The project will consist of three files:

        1. requirements.txt - will store all the requirements of our problem definition,

        2. application.py - the implementation,

        3. playground.py - a file showcasing the functionality and proving it implements fully the requirements, and

        4. tests.py - the unittests